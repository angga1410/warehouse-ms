{
  "_args": [
    [
      {
        "raw": "grunt-update-json@git+https://github.com/AndreasPizsa/grunt-update-json.git#e7958d970a5bea85d8153112962ec4ba4315ed37",
        "scope": null,
        "escapedName": "grunt-update-json",
        "name": "grunt-update-json",
        "rawSpec": "git+https://github.com/AndreasPizsa/grunt-update-json.git#e7958d970a5bea85d8153112962ec4ba4315ed37",
        "spec": "git+https://github.com/AndreasPizsa/grunt-update-json.git#e7958d970a5bea85d8153112962ec4ba4315ed37",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:AndreasPizsa/grunt-update-json.git#e7958d970a5bea85d8153112962ec4ba4315ed37",
          "sshUrl": "git+ssh://git@github.com/AndreasPizsa/grunt-update-json.git#e7958d970a5bea85d8153112962ec4ba4315ed37",
          "httpsUrl": "git+https://github.com/AndreasPizsa/grunt-update-json.git#e7958d970a5bea85d8153112962ec4ba4315ed37",
          "gitUrl": "git://github.com/AndreasPizsa/grunt-update-json.git#e7958d970a5bea85d8153112962ec4ba4315ed37",
          "shortcut": "github:AndreasPizsa/grunt-update-json#e7958d970a5bea85d8153112962ec4ba4315ed37",
          "directUrl": "https://raw.githubusercontent.com/AndreasPizsa/grunt-update-json/e7958d970a5bea85d8153112962ec4ba4315ed37/package.json"
        }
      },
      "F:\\All Projects\\new projects\\warehouse\\node_modules\\ajax-bootstrap-select"
    ]
  ],
  "_from": "grunt-update-json@git+https://github.com/AndreasPizsa/grunt-update-json.git#e7958d970a5bea85d8153112962ec4ba4315ed37",
  "_id": "grunt-update-json@0.2.2",
  "_inCache": true,
  "_location": "/ajax-bootstrap-select/grunt-update-json",
  "_phantomChildren": {},
  "_requested": {
    "raw": "grunt-update-json@git+https://github.com/AndreasPizsa/grunt-update-json.git#e7958d970a5bea85d8153112962ec4ba4315ed37",
    "scope": null,
    "escapedName": "grunt-update-json",
    "name": "grunt-update-json",
    "rawSpec": "git+https://github.com/AndreasPizsa/grunt-update-json.git#e7958d970a5bea85d8153112962ec4ba4315ed37",
    "spec": "git+https://github.com/AndreasPizsa/grunt-update-json.git#e7958d970a5bea85d8153112962ec4ba4315ed37",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:AndreasPizsa/grunt-update-json.git#e7958d970a5bea85d8153112962ec4ba4315ed37",
      "sshUrl": "git+ssh://git@github.com/AndreasPizsa/grunt-update-json.git#e7958d970a5bea85d8153112962ec4ba4315ed37",
      "httpsUrl": "git+https://github.com/AndreasPizsa/grunt-update-json.git#e7958d970a5bea85d8153112962ec4ba4315ed37",
      "gitUrl": "git://github.com/AndreasPizsa/grunt-update-json.git#e7958d970a5bea85d8153112962ec4ba4315ed37",
      "shortcut": "github:AndreasPizsa/grunt-update-json#e7958d970a5bea85d8153112962ec4ba4315ed37",
      "directUrl": "https://raw.githubusercontent.com/AndreasPizsa/grunt-update-json/e7958d970a5bea85d8153112962ec4ba4315ed37/package.json"
    }
  },
  "_requiredBy": [],
  "_resolved": "git+https://github.com/AndreasPizsa/grunt-update-json.git#e7958d970a5bea85d8153112962ec4ba4315ed37",
  "_shasum": "b9e2503741d9df314ea7483a5a539046ceeac945",
  "_shrinkwrap": null,
  "_spec": "grunt-update-json@git+https://github.com/AndreasPizsa/grunt-update-json.git#e7958d970a5bea85d8153112962ec4ba4315ed37",
  "_where": "F:\\All Projects\\new projects\\warehouse\\node_modules\\ajax-bootstrap-select",
  "author": {
    "name": "Andreas Pizsa",
    "url": "http://github.com/AndreasPizsa"
  },
  "bugs": {
    "url": "https://github.com/AndreasPizsa/grunt-update-json/issues"
  },
  "config": {
    "blanket": {
      "pattern": [
        "grunt-update-json/tasks"
      ]
    }
  },
  "contributors": [
    {
      "name": "bollwyvl",
      "url": "https://github.com/bollwyvl"
    },
    {
      "name": "Vasyl Zuzyak",
      "url": "https://github.com/ZuBB"
    },
    {
      "name": "Andrew Dryga",
      "url": "https://github.com/AndrewDryga"
    }
  ],
  "dependencies": {
    "JSONPath": "~0.10.0",
    "json-pointer": "~0.1.0",
    "json-stable-stringify": "^1.0.0",
    "lodash": "~2.4.1"
  },
  "description": "Merge parts from one or more JSON files together. I use `grunt-update-json` to keep my `Bower.json` and `component.json` in sync with `package.json`.",
  "devDependencies": {
    "blanket": "~1.1.6",
    "chai": "~1.9.1",
    "grunt": "~0.4.2",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-copy": "~0.5.0",
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-watch": "~0.6.1",
    "grunt-mocha-cov": "~0.2.1",
    "load-grunt-tasks": "~0.4.0",
    "mocha-term-cov-reporter": "~0.2.0",
    "should": "~3.3.1"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "gitHead": "e7958d970a5bea85d8153112962ec4ba4315ed37",
  "homepage": "https://github.com/andreaspizsa/grunt-update-json",
  "keywords": [
    "gruntplugin",
    "json",
    "json pointer",
    "merge",
    "update",
    "sync",
    "bower.json",
    "component.json",
    "composer.json"
  ],
  "license": "MIT",
  "main": "Gruntfile.js",
  "name": "grunt-update-json",
  "optionalDependencies": {},
  "peerDependencies": {
    "grunt": ">=0.4.0"
  },
  "readme": "# grunt-update-json [![Travis Build Status](http://img.shields.io/travis/AndreasPizsa/grunt-update-json.svg?style=flat-square)](http://travis-ci.org/AndreasPizsa/grunt-update-json) ![npm Release](http://img.shields.io/npm/v/grunt-update-json.svg?style=flat-square \"npm Release\") ![npm License](http://img.shields.io/npm/l/grunt-update-json.svg?style=flat-square \"npm License\")\r\n\r\nMerge parts from one or more JSON files together. I use `grunt-update-json` to keep my `bower.json` and `component.json` in sync with `package.json`.\r\n\r\n\r\n[![Endorse on Coderwall](http://api.coderwall.com/andreaspizsa/endorsecount.png)](http://coderwall.com/andreaspizsa)\r\n[![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\r\n\r\n## Upgrading from 1.x\r\nThe semantics of [Object Groupings](#object-grouping) have been reversed:\r\n\r\n- was `{from: \"to\"}`\r\n- now``{to: \"from\"}`\r\n\r\n\r\n## Getting Started\r\n\r\n```shell\r\nnpm install grunt-update-json --save-dev\r\n```\r\n\r\n\r\nI highly favor using the fabulous [`load-grunt-tasks`](https://github.com/sindresorhus/load-grunt-tasks) over the tiring and cumbersome `grunt.loadNpmTasks`. Your grunt tasks are all in your `package.json`, so let's embrace [DRY](http://en.wikipedia.org/wiki/Don't_repeat_yourself):\r\n\r\n```shell\r\nnpm install load-grunt-tasks --save-dev\r\n```\r\n\r\n```js\r\n// Gruntfile.js\r\nmodule.exports = function (grunt) {\r\n    require('load-grunt-tasks')(grunt); // load all grunt tasks. Done!\r\n```\r\n\r\n## Using the `update_json` task\r\nIn your awesome project's Gruntfile, add a section named `update_json`:\r\n\r\n```js\r\n// Gruntfile.js\r\ngrunt.initConfig({\r\n  update_json: {\r\n    // set some task-level options\r\n    options: {\r\n      src: 'package.json',\r\n      indent: '\\t'\r\n    },\r\n    // update bower.json with data from package.json\r\n    bower: {\r\n      src: 'package.json',    // where to read from\r\n      dest: 'bower.json',     // where to write to\r\n      // the fields to update, as a String Grouping\r\n      fields: 'name version description repository'\r\n    },\r\n    // update component.json with data from package.json\r\n    // component.json fields are a named a bit differently from\r\n    // package.json, so let's tell update_json how to map names\r\n    component: {\r\n      // reuse the task-level `src`\r\n      dest: 'component.json',      // where to write to\r\n      fields: {                    // the fields to update\r\n        // notice how this time we're passing a hash instead\r\n        // of an array; this allows us to map the field names.\r\n        // We still specify all the names we want, and additionally\r\n        // we also specify the target name in the detination file.\r\n        // to            from\r\n        // -----------   -------------------\r\n        'name'            : null,         // null means 'leave as is'\r\n        'description'     : 'description',// but feel free to type the field name twice\r\n        'repository'      : 'repo',       // rename 'repository' to 'repo'\r\n        'version'         : null,\r\n        'keywords'        : null,\r\n        'main'            : null,\r\n        'dependencies'    : null,\r\n        'development'     : 'devDependencies',\r\n        'license'         : null,\r\n      }\r\n    },\r\n    // `composer` has the same data as `package`, but has some tricky\r\n    // semantics\r\n    composer: {\r\n      // again, reuse the task-level `src`\r\n      dest: 'composer.json',\r\n      // the fields in an Array Grouping with some embedded Object Groupings\r\n      fields: [\r\n        {\r\n          name: function(src){\r\n            return src.repository.url.match(/([^\\/]+\\/[^\\/]+).git/)[1];\r\n          }\r\n        },\r\n        'description',\r\n        'keywords',\r\n        'homepage',\r\n        {\r\n          license: 'licenses/0/type',\r\n          authors: [{\r\n            name: 'author/name',\r\n            homepage: 'author/url'\r\n          }]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n## API\r\n### `options`\r\nLike most Grunt tasks, options can be specified at the `update_json` level\r\nand/or at the `update_json:<target>` level. Target-level `options` override task-level `options`.\r\n\r\n#### `options.indent`\r\nBy default, output will not be pretty-printed. Specify a value here to have\r\nindentation applied:\r\n```js\r\nupdate_json: {options: {indent: \"\\t\"}}\r\n```\r\nor for spaces:\r\n```js\r\nupdate_json: {options: {indent: \"  \"}}\r\n```\r\n\r\n### Source Data\r\n> `src`\r\n>\r\n> An input JSON file. May be a list, which will be [`_.merge`d][_merge] together.\r\n[_merge]: http://lodash.com/docs#merge\r\n### Destination Data\r\n> `dest`\r\n>\r\n> An output JSON file.\r\n\r\n### Field Groupings\r\n> `fields`\r\n>\r\n> an ordered collection of [_field specifications_](#field-specifications), which\r\n> can optionally contain additional lists of fields.\r\n\r\n\r\n#### Object Grouping\r\n> `{fields: {field: null, another: \"yetanother\"}}`\r\n>\r\n> A list of field specs, pointing at any other kind of field specification.\r\n\r\n\r\n#### Array Grouping\r\n> `{fields: [\"field\", \"another\", \"still another > yet another\"]}`\r\n>\r\n> Create [field copies](#field-copy), or [field renames](#field-rename), of\r\n> each of the listed fields.\r\n\r\n\r\n#### String Grouping\r\n> `{fields: \"field, another, still another > yetanother\"}`\r\n>\r\n> Create [field copies](#field-copy), or [field renames](#field-rename), of\r\n> each of the listed fields.\r\n\r\nThe most concise way to copy/rename a number of fields of simple JSON documents\r\n\r\n##### Limitations\r\n- Can't handle fields with `,` or `>` in their names.\r\n- Can't handle most complex [field paths](#field-path).\r\n\r\n\r\n### Field Specifications\r\nThe canonical Object Grouping format is used here: some specifications are not\r\ncompatible with some Groupings.\r\n\r\n#### Field Copy\r\n> `{field: null}`\r\n>\r\n> Create or replace `field` in `dest` from the value of `field` in `src`.\r\n\r\n\r\n#### Field Rename\r\n> `{renamed: \"original\"}` or\r\n> `\"original > renamed\"` _[String Grouping](#string-grouping) only_\r\n>\r\n> Create or replace `renamed` in `dest` with the value of `original` from `src`.\r\n\r\n\r\n#### Field Pointer\r\n> `{field: \"/some/deep/field\"}`\r\n>\r\n> Create or replace `field` in `dest` from `some/deep/field` in `src`.\r\n\r\nA field spec destination which starts with `/` will be interepreted as a\r\n[json-pointer](https://github.com/manuelstofer/json-pointer).\r\n\r\nTo select a field that begins with a literal `/`, escape with a single `\\`\r\n(written `\\\\`):\r\n\r\n`{field: \"\\\\/a\"}`\r\n\r\n\r\n### Field Path\r\n> `{field: \"$.some.path[(@.with='filters')]\"}`\r\n>\r\n>  Create or replace `field` in `dest` with the value of nodes found with a\r\n> JSONPath query\r\n\r\nA field spec destination which starts with `$.` will be interpreted as a\r\n[JSONPath](https://github.com/s3u/JSONPath) selector.\r\n\r\nTo select a field that begins with a literal `$.`, escape with a single `\\`\r\n(written `\\\\`):\r\n\r\n`{field: \"\\\\$.a\"}`\r\n\r\n\r\n#### Field Collapse\r\n> `{field: [\"first\", \"second\"]}`\r\n>\r\n> Create or replace an array named `field` in `dest` with the values of `first`\r\n> and `second` from `src`.\r\n\r\n\r\n#### Field Construct\r\n> `{field: {first: \"first\", second: \"second\"}}`\r\n>\r\n> Create or merge an object `field` in `dest` with labeled `first` and\r\n> `second` with their respective values from `src`\r\n\r\n\r\n#### Field Function\r\n> `{field: function(src){ return src.field; }}`\r\n>\r\n> Create a field named `field` that is the output of running a function against\r\n> `src`.\r\n\r\nIf all else fails, you can supply a function which will called with a copy of\r\nthe combined source object.\r\n```js\r\nupdate_json: {\r\n  composer: {\r\n    src: \"package.json\",\r\n    dest: \"composer.json\",\r\n    fields: {\r\n      name: function(src){\r\n        // pull username/repo off a github url\r\n        return src.repository.url.match(/([^\\/]+\\/[^\\/]+).git/)[1];\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n## Ideas for improvement\r\n- see [enhancements](https://github.com/AndreasPizsa/grunt-update-json/issues?labels=enhancement&page=1&state=open)\r\n\r\n## License\r\n\r\nMIT\r\n\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/AndreasPizsa/grunt-update-json/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/AndreasPizsa/grunt-update-json.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "version": "0.2.2"
}
