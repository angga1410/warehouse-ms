{
  "_args": [
    [
      {
        "raw": "delims@https://registry.npmjs.org/delims/-/delims-0.4.2.tgz",
        "scope": null,
        "escapedName": "delims",
        "name": "delims",
        "rawSpec": "https://registry.npmjs.org/delims/-/delims-0.4.2.tgz",
        "spec": "https://registry.npmjs.org/delims/-/delims-0.4.2.tgz",
        "type": "remote"
      },
      "F:\\All Projects\\new projects\\warehouse\\node_modules\\ajax-bootstrap-select"
    ]
  ],
  "_from": "delims@https://registry.npmjs.org/delims/-/delims-0.4.2.tgz",
  "_id": "delims@0.4.2",
  "_inCache": true,
  "_location": "/ajax-bootstrap-select/marked-toc/delims",
  "_phantomChildren": {},
  "_requested": {
    "raw": "delims@https://registry.npmjs.org/delims/-/delims-0.4.2.tgz",
    "scope": null,
    "escapedName": "delims",
    "name": "delims",
    "rawSpec": "https://registry.npmjs.org/delims/-/delims-0.4.2.tgz",
    "spec": "https://registry.npmjs.org/delims/-/delims-0.4.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ajax-bootstrap-select/marked-toc",
    "/ajax-bootstrap-select/marked-toc/gray-matter"
  ],
  "_resolved": "https://registry.npmjs.org/delims/-/delims-0.4.2.tgz",
  "_shasum": "ce7f36c9cf709a9e244f83997aa91cb749b452a8",
  "_shrinkwrap": null,
  "_spec": "delims@https://registry.npmjs.org/delims/-/delims-0.4.2.tgz",
  "_where": "F:\\All Projects\\new projects\\warehouse\\node_modules\\ajax-bootstrap-select",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/delims/issues"
  },
  "dependencies": {
    "arrayify-compact": "^0.1.0",
    "mixin-deep": "^0.1.0",
    "object-pick": "^0.1.1"
  },
  "description": "Generate RegExp for delimiters, to be used with templates, files or data streams.",
  "devDependencies": {
    "mocha": "*",
    "should": "^4.0.4"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "files": [
    "index.js",
    "lib/"
  ],
  "homepage": "https://github.com/jonschlinkert/delims",
  "keywords": [
    "boundaries",
    "custom",
    "customize",
    "delimiters",
    "delims",
    "expressions",
    "front",
    "matter",
    "pattern",
    "patterns",
    "re",
    "regex",
    "regexp",
    "regular",
    "template",
    "templates",
    "yaml",
    "yfm"
  ],
  "license": {
    "type": "MIT",
    "url": "https://github.com/jonschlinkert/delims/blob/master/LICENSE"
  },
  "main": "index.js",
  "name": "delims",
  "optionalDependencies": {},
  "readme": "# delims [![NPM version](https://badge.fury.io/js/delims.svg)](http://badge.fury.io/js/delims)\n\n\n> Generate RegExp for delimiters, to be used with templates, files or data streams.\n\n\n### BREAKING API CHANGES!\n\n**Heads up!** please [read the API documentation](#API) to see the changes made in v0.3.0.\n\n\n#### Install with [npm](npmjs.org)\n\n```bash\nnpm i delims --save\n```\n#### Install with [bower](https://github.com/bower/bower)\n\n```bash\nbower install delims --save\n```\n\n\n## Run tests\n\n```bash\nnpm test\n```\n\n## Usage\n\n```js\nvar Delims = require('delims');\nvar delims = new Delims();\n```\n\n\n# API\n\n## .templates\n\n> Create delimiter regex for templates.\n\n**Example:**\n\nLet's say you want to use curly braces as delimiters for Lo-Dash templates instead of angle brackes, e.g. `{%= name %}`.\n\n```js\nvar settings = delims.templates(['{{', '}}']);\n\n// use it like this\nvar tmpl = _.template('{%= name %}', {name: 'Jon'}, settings);\nconsole.log(tmpl);\n//=> Jon\n```\n\nThe full object returned looks something like:\n\n```js\n{\n  beginning: '',\n  matter: '([\\\\s\\\\S]+?)',\n  body: '',\n  end: '',\n  flags: 'g',\n  noncapture: false,\n  delims: [ '{%', '%}' ],\n  open: '{%',\n  close: '%}',\n  evaluate: /{%([\\s\\S]+?)%}/g,\n  interpolate: /{%=([\\s\\S]+?)%}/g,\n  escape: /{%-([\\s\\S]+?)%}/g\n}\n```\n\n\n## .matter\n\n> Create delimiter regex for front-matter.\n\n```js\ndelims.matter(['~~~', '~~~']);\n//=> '/^~~~([\\\\s\\\\S]+?)~~~([\\\\s\\\\S]+|\\\\s?)$/';\n\ndelims.matter(['~{3}', '~{3}']);\n//=> '/^~{3}([\\\\s\\\\S]+?)~{3}([\\\\s\\\\S]+|\\\\s?)$/';\n```\n\nRead [more about delimiters](#delimiters).\n\n\n## about delimiters\nType: `Array`\n\nDefault: `['---', '---']`\n\nAn array of strings is appropriate for typical use cases, with the first item in the array being the \"opening\" delimiter, and the second item being the \"closing\" delimiter. In cases when multiple delimiters are required, e.g. `---` or `~~~`, an _array of arrays_ may be passed in, where the first array will be used as opening delimiters and the second array will be used as closing delimiters.\n\nAdditionally, when multiple arrays are passed in the generated delimiters will be wrapped in non-capturing RegExp groups. For example, this:\n\n```js\ndelims([\n  ['---', '~~~'], // delimiter 1\n  ['---', '~~~']  // delimiter 2\n]);\n```\nwill result in something like this:\n\n```js\n// for clarity, only the regex for delimiters is shown here\n(?:---|~~~)/*other regex*/(?:---|~~~)\n```\n\n_(Warning! Passing in multiple delimiters is a good way to cause delimiter collision, you best avoid doing so accept for running tests. Don't say I didn't warn you!)_\n\n\n## options\n\nAn object of options may be passed as a second parameter.  Example:\n\n```js\ndelims(['---', '---'], options);\n```\n\nHere are the available options and their defaults, starting with **boundary** options:\n\n\n### Boundary options\nIn addition to the delimiters themselves, these additional boundary options are available for increased flexibility.\n\n#### matter\nType: `Boolean`\n\nDefault: `([\\s\\S]+?)`\n\nThis is the \"content\" between the delimiters. YAML Front Matter being the inspiration for `matter`. See [the examples](#examples).\n\n\n#### body\nType: `Boolean`\n\nDefault: `([\\s\\S]+|\\s?)`\n\nThe \"content\" after the delims\n\n\n### RegExp Options\n#### beginning\nType: `Boolean`\n\nDefault: `^`\n\n`^` Matches beginning of input. See the [Mozilla RegEx documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp).\n\n#### end\nType: `Boolean`\n\nDefault: `$`\n\n`$` Matches end of input. See the [Mozilla RegEx documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp).\n\n### escape\nType: `Boolean`\n\nDefault: `false`\n\nEscape custom regex used for delimiters. E.g. `['{%', '%}']` will be escaped to `['\\\\{\\\\%', '\\\\%\\\\}']` before being passed to `new RegExp()`.\n\n### noncapture\nType: `Boolean`\n\nDefault: `false`\n\nBuild a non-capture group. Disabled by default, but enabled by default when multiple delimiters are passed in.\n\n### flags\nType: `Boolean`\n\nDefault: `undefined`\n\n* `g`: global match\n* `i`: ignore case\n* `m`: multiline, so that beginning and end characters, `^` and `$`, work over multiple lines. See the [Mozilla RegEx documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp).\n\n\n## Examples\n\n> A delimiter is a sequence of one or more characters used to specify the boundary between separate, independent regions in plain text or other data streams.\n> --[Wikipedia](http://en.wikipedia.org/wiki/Delimiter)\n\n\n### YAML Front Matter\n\n\n![image](https://f.cloud.github.com/assets/383994/2003333/7eeee55e-8647-11e3-848c-9290ebeb70a6.png)\n\n\n***\n\n### Lo-Dash Templates\n\n![image](https://f.cloud.github.com/assets/383994/2003335/8ab362a2-8647-11e3-820f-0a1f110532f0.png)\n\n\n***\n\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\nCopyright (c) 2014 Jon Schlinkert, contributors.\nReleased under the MIT license\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on September 26, 2014._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/delims.git"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "version": "0.4.2"
}
