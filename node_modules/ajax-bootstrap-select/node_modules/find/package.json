{
  "_args": [
    [
      {
        "raw": "find@https://registry.npmjs.org/find/-/find-0.1.7.tgz",
        "scope": null,
        "escapedName": "find",
        "name": "find",
        "rawSpec": "https://registry.npmjs.org/find/-/find-0.1.7.tgz",
        "spec": "https://registry.npmjs.org/find/-/find-0.1.7.tgz",
        "type": "remote"
      },
      "F:\\All Projects\\new projects\\warehouse\\node_modules\\ajax-bootstrap-select"
    ]
  ],
  "_from": "find@https://registry.npmjs.org/find/-/find-0.1.7.tgz",
  "_id": "find@0.1.7",
  "_inCache": true,
  "_location": "/ajax-bootstrap-select/find",
  "_phantomChildren": {},
  "_requested": {
    "raw": "find@https://registry.npmjs.org/find/-/find-0.1.7.tgz",
    "scope": null,
    "escapedName": "find",
    "name": "find",
    "rawSpec": "https://registry.npmjs.org/find/-/find-0.1.7.tgz",
    "spec": "https://registry.npmjs.org/find/-/find-0.1.7.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ajax-bootstrap-select",
    "/ajax-bootstrap-select/repo-templates/verb",
    "/ajax-bootstrap-select/verb"
  ],
  "_resolved": "https://registry.npmjs.org/find/-/find-0.1.7.tgz",
  "_shasum": "c86c87af1ab18f222bbe38dec86cbc760d16a6fb",
  "_shrinkwrap": null,
  "_spec": "find@https://registry.npmjs.org/find/-/find-0.1.7.tgz",
  "_where": "F:\\All Projects\\new projects\\warehouse\\node_modules\\ajax-bootstrap-select",
  "author": {
    "name": "yuanchuan",
    "email": "yuanchuan23@gmail.com",
    "url": "http://yuanchuan.name"
  },
  "bugs": {
    "url": "https://github.com/yuanchuan/find/issues"
  },
  "dependencies": {
    "traverse-chain": "~0.1.0"
  },
  "description": "Find files or directories by name",
  "devDependencies": {},
  "homepage": "https://github.com/yuanchuan/find#readme",
  "keywords": [
    "find",
    "findfile",
    "search",
    "files"
  ],
  "main": "./index.js",
  "name": "find",
  "optionalDependencies": {},
  "readme": "#find\n\nFind files or directories by name.\n\n\n## Installation\n\n```bash\n$ npm install find\n```\n\n## Examples\n\nFind all `.js` files in current directory.\n\n```javascript\nvar find = require('find');\n\nfind.file(/\\.js$/, __dirname, function(files) {\n  console.log(files.length);\n})\n```\n\n## Features\n  * Recursively search each sub-directories\n  * Asynchronously or synchronously \n  * Filtering by regular expression or string comparing\n\n\n## API\n\n### #file(pattern, root, callback)\n\n```javascript\nfind.file(/log/, __dirname, function(files) {\n  //\n})\n```\n\n### #dir(pattern, root, callback)\n```javascript\nfind.dir(/log/, __dirname, function(dirs) {\n  //\n})\n``` \n\n\n### #eachfile(pattern, root, action)\n\n```javascript\nfind.eachfile(/./, __dirname, function(file) {\n  //\n})\n```\n\n### #eachdir(pattern, root, callback)\n\n```javascript\nfind.eachdir(/./, __dirname, function(dir) {\n  //\n})\n```  \n\n### #fileSync(pattern, root)\n```javascript\nvar files = find.fileSync(/./, __dirname);\n```\n\n### #dirSync(pattern, root)\n```javascript\nvar dirs = find.dirSync(/./, __dirname);\n```\n\n## Returned object in Asynchronous APIs\n\n### Handling errors\n\n```javascript\nfind\n  .file(/./, __dirname, function(file) {\n    //  \n  })\n  .error(function(err) {\n    if (err) {\n      //\n    }\n  })\n```\n\n### Detect `end` in `find.eachfile` and `find.eachdir`\n\n```javascript\nfind\n  .eachfile(/./, __dirname, function(file) {\n    //\n  })\n  .end(function() {\n    console.log('find end'); \n  }) \n```\n \n\n## LICENSE\n\n(MIT Licensed)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/yuanchuan/find.git"
  },
  "url": "https://github.com/yuanchuan/find",
  "version": "0.1.7"
}
